git + jenkins
1. aws 접속
2. jdk, tomcat 설치(대부분 jdk url이 바뀌었음)
2-1. rpm은 레드햇계열만 사용가능 cf) Ubuntu는 안됨
-> #우선 최신 버전의 패키지를 불러온다.
     sudo apt-get update
   # alien 패키지를 설치하자.
     sudo apt-get install alien
   # RPM파일을 Deb파일로 변환
     sudo alien -c RPM파일명
   # Deb파일 설치
sudo dpkg -i Deb로 변환된 파일명
출처: https://bramhyun.tistory.com/65

sudo wget --no-check-certificate -c --header "Cookie: oraclelicense=accept-securebackup-cookie" https://download.oracle.com/java/17/archive/jdk-17.0.1_linux-x64_bin.rpm
     wget -c --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm
출처: https://learn-it-university.com/how-to-download-java-jdk-on-linux-using-wget-while-bypassing-the-license-page/
sudo rpm -i *.rpm (또는 rpm파일 더블 클릭)
cf) 설치된 팩키지를 삭제 : sudo rpm -e jdk-8u131-linux-x64.rpm

Tomcat7 ---
sudo wget https://archive.apache.org/dist/tomcat/tomcat-7/v7.0.88/bin/apache-tomcat-7.0.88.tar.gz
출처: https://archive.apache.org/dist/tomcat/tomcat-7/v7.0.88/bin/

tar -zxvf apache-tomcat-7.0.88.tar.gz

mv *88 tomcat7
cd tomcat7/bin
./startup.sh

jenkins ---
sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
     sudo wget -O /etc/yum.repos.d/jenkins.repo https://get.jenkins.io/redhat-stable/jenkins-2.164.3-1.1.noarch.rpm
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key

sudo yum update -y
sudo yum install jenkins
  or
sudo dnf config-manager --add-repo /etc/yum.repos.d/jenkins.repo
sudo dnf install jenkins

sudo vi /usr/lib/systemd/system/jenkins.service
sudo systemctl start jenkins&
sudo systemctl status jenkins
error...!
sudo systemctl daemon-reload
sudo systemctl restart jenkins

출처: https://get.jenkins.io/redhat-stable/
출처: https://jong-bae.tistory.com/49

stop
sudo systemctl stop jenkins.service

2. apt package 관리자로 삭제
sudo yum list installed | grep jenkins
sudo yum remove jenkins

 
3. 관련 디렉토리 삭제
sudo rm -rf /var/lib/jenkins
sudo rm -dfr /run/jenkins
sudo rm -dfr /usr/share/jenkins
sudo rm -rf /var/log/jenkins

=====================================

Git 설치
1. sudo dnf install git

Downloading Packages:
(1/8): git-2.40.1-1.amzn2023.0.3.x86_64.rpm      
    https://mirrors.edge.kernel.org/pub/software/scm/git/
(2/8): perl-Error-0.17029-5.amzn2023.0.2.noarch.rpm       
    https://pkgs.org/download/perl(Error)
     https://metacpan.org/dist/Error
(3/8): perl-File-Find-1.37-477.amzn2023.0.6.noarch.rpm                                                                                                                                                                                              1.1 MB/s |  26 kB     00:00
(4/8): perl-Git-2.40.1-1.amzn2023.0.3.noarch.rpm                                                                                                                                                                                                    1.7 MB/s |  42 kB     00:00
(5/8): git-core-2.40.1-1.amzn2023.0.3.x86_64.rpm                                                                                                                                                                                                     12 MB/s | 4.3 MB     00:00
(6/8): git-core-doc-2.40.1-1.amzn2023.0.3.noarch.rpm                                                                                                                                                                                                7.1 MB/s | 2.6 MB     00:00
(7/8): perl-TermReadKey-2.38-9.amzn2023.0.2.x86_64.rpm                                                                                                                                                                                              532 kB/s |  36 kB     00:00
(8/8): perl-lib-0.65-477.amzn2023.0.6.x86_64.rpm    

2. 유저생성
sudo useradd -m git -s /bin/bash

3. 여기서부터는 서버 설정입니다.
sudo su git
cd ~/
ssh 키가 없거나 새로 만들어서 따로 사용하실 분들은 아래 과정을 진행해주세요.

mkdir .ssh
ssh-keygen -t rsa -b 4096
    -> git001/gaia00
    Enter file in which to save the key (/home/git/.ssh/id_rsa): git002

id_rsa.pub >> authorized_keys
chmod 600 authorized_keys
cat git001 
# 내용 복사 후 접속할 클라이언트에 저장 -> id_rsa 를 키로 이용
갖고 있는 ssh key를 이용하실 분들은 아래 과정을 진행해주세요.

ssh -import -git001 ec2-user
user에 github 아이디 입력하고 import 해서 원래 키로 접속!

3. git repository 생성하기

우리의 코드나 작업물을 저장할 repository를 생성하겠습니다.

mkdir test.git
cd test.git
git init --bare
sudo git init --bare
--bare 옵션으로 초기화를 해줘야 repository로 사용 가능합니다.

4. 저장할 작업물에 가서 git 서버 연결해주기

git remote add origin git@192.xxx.xxx.xxx:22/home/git/test.git
git push origin master
git@ip주소:포트/repository주소 이런 식으로 입력하시면 됩니다. 마찬가지로 clone 할 때는

git clone ssh://git@192.168.0.1:22/home/git/test.git
.ssh 디렉터리에 id_rsa 키를 갖고 있다면 따로 비밀번호 필요 없이 clone 이나 push 를 할 수 있습니다.

 

github를 완전히 대체할 순 없지만 지극히 개인적인 자료를 관리할 때 유용했고 개인 노트북으로 주로 작업해서 ssh키를 옮겨 다닐 필요없이 바로 사용할 수 있는 환경이라면 편하게 사용할 수 있었습니다.




Linux 
Table of Contents
Prerequisites
Debian/Ubuntu
Long Term Support release
Weekly release
Installation of Java
Fedora
Long Term Support release
Weekly release
Start Jenkins
Red Hat/Alma/Rocky
Long Term Support release
Weekly release
Start Jenkins
Post-installation setup wizard
Unlocking Jenkins
Customizing Jenkins with plugins
Creating the first administrator user
Jenkins installers are available for several Linux distributions.

Debian/Ubuntu

Fedora

Red Hat/Alma/Rocky

Prerequisites
Minimum hardware requirements:

256 MB of RAM

1 GB of drive space (although 10 GB is a recommended minimum if running Jenkins as a Docker container)

Recommended hardware configuration for a small team:

4 GB+ of RAM

50 GB+ of drive space

Comprehensive hardware recommendations:

Hardware: see the Hardware Recommendations page

Software requirements:

Java: see the Java Requirements page

Web browser: see the Web Browser Compatibility page

For Windows operating system: Windows Support Policy

For Linux operating system: Linux Support Policy

For servlet containers: Servlet Container Support Policy

Debian/Ubuntu
On Debian and Debian-based distributions like Ubuntu you can install Jenkins through apt.

With the release of Debian 12, OpenJDK 11 is no longer included. It has been replaced with OpenJDK 17, which is reflected in the instructions below.
Long Term Support release
A LTS (Long-Term Support) release is chosen every 12 weeks from the stream of regular releases as the stable release for that time period. It can be installed from the debian-stable apt repository.

sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]" \
  https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt-get update
sudo apt-get install jenkins
Weekly release
A new release is produced weekly to deliver bug fixes and features to users and plugin developers. It can be installed from the debian apt repository.

sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
  https://pkg.jenkins.io/debian/jenkins.io-2023.key
echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]" \
  https://pkg.jenkins.io/debian binary/ | sudo tee \
  /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt-get update
sudo apt-get install jenkins
Beginning with Jenkins 2.335 and Jenkins 2.332.1, the package is configured with systemd rather than the older System V init. See the DigitalOcean community systemd tutorial to better understand the benefits of systemd and the systemctl command.

The package installation will:

Setup Jenkins as a daemon launched on start. Run systemctl cat jenkins for more details.

Create a ‘jenkins’ user to run this service.

Direct console log output to systemd-journald. Run journalctl -u jenkins.service if you are troubleshooting Jenkins.

Populate /lib/systemd/system/jenkins.service with configuration parameters for the launch, e.g JENKINS_HOME

Set Jenkins to listen on port 8080. Access this port with your browser to start configuration.

If Jenkins fails to start because a port is in use, run systemctl edit jenkins and add the following:

[Service]
Environment="JENKINS_PORT=8081"
Here, "8081" was chosen but you can put another port available.

Installation of Java
Jenkins requires Java to run, yet not all Linux distributions include Java by default. Additionally, not all Java versions are compatible with Jenkins.

There are multiple Java implementations which you can use. OpenJDK is the most popular one at the moment, we will use it in this guide.

Update the Debian apt repositories, install OpenJDK 17, and check the installation with the commands:

sudo apt update
sudo apt install fontconfig openjdk-17-jre
java -version
openjdk version "17.0.8" 2023-07-18
OpenJDK Runtime Environment (build 17.0.8+7-Debian-1deb12u1)
OpenJDK 64-Bit Server VM (build 17.0.8+7-Debian-1deb12u1, mixed mode, sharing)
Why use apt and not apt-get or another command? The apt command has been available since 2014. It has a command structure that is similar to apt-get but was created to be a more pleasant experience for typical users. Simple software management tasks like install, search and remove are easier with apt.

Fedora
You can install Jenkins through dnf. You need to add the Jenkins repository from the Jenkins website to the package manager first.

Long Term Support release
A LTS (Long-Term Support) release is chosen every 12 weeks from the stream of regular releases as the stable release for that time period. It can be installed from the redhat-stable yum repository.

sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
sudo dnf upgrade
# Add required dependencies for the jenkins package
sudo dnf install fontconfig java-17-openjdk
sudo dnf install jenkins
sudo systemctl daemon-reload
Weekly release
A new release is produced weekly to deliver bug fixes and features to users and plugin developers. It can be installed from the redhat yum repository.

sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat/jenkins.io-2023.key
sudo dnf upgrade
# Add required dependencies for the jenkins package
sudo dnf install fontconfig java-17-openjdk
sudo dnf install jenkins
Start Jenkins
You can enable the Jenkins service to start at boot with the command:

sudo systemctl enable jenkins
You can start the Jenkins service with the command:

sudo systemctl start jenkins
You can check the status of the Jenkins service using the command:

sudo systemctl status jenkins
If everything has been set up correctly, you should see an output like this:

Loaded: loaded (/lib/systemd/system/jenkins.service; enabled; vendor preset: enabled)
Active: active (running) since Tue 2018-11-13 16:19:01 +03; 4min 57s ago
If you have a firewall installed, you must add Jenkins as an exception. You must change YOURPORT in the script below to the port you want to use. Port 8080 is the most common.

YOURPORT=8080
PERM="--permanent"
SERV="$PERM --service=jenkins"

firewall-cmd $PERM --new-service=jenkins
firewall-cmd $SERV --set-short="Jenkins ports"
firewall-cmd $SERV --set-description="Jenkins port exceptions"
firewall-cmd $SERV --add-port=$YOURPORT/tcp
firewall-cmd $PERM --add-service=jenkins
firewall-cmd --zone=public --add-service=http --permanent
firewall-cmd --reload
Red Hat/Alma/Rocky
You can install Jenkins through yum on Red Hat Enterprise Linux, Alma Linux, Rocky Linux, Oracle Linux, and other Red Hat based distributions.

How To Install Jenkins on Rocky Linux 9

You need to choose either the Jenkins Long Term Support release or the Jenkins weekly release.

Long Term Support release
A LTS (Long-Term Support) release is chosen every 12 weeks from the stream of regular releases as the stable release for that time period. It can be installed from the redhat-stable yum repository.

sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
sudo yum upgrade
# Add required dependencies for the jenkins package
sudo yum install fontconfig java-17-openjdk
sudo yum install jenkins
sudo systemctl daemon-reload
Weekly release
A new release is produced weekly to deliver bug fixes and features to users and plugin developers. It can be installed from the redhat yum repository.

sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat/jenkins.io-2023.key
sudo yum upgrade
# Add required dependencies for the jenkins package
sudo yum install fontconfig java-17-openjdk
sudo yum install jenkins
Start Jenkins
You can enable the Jenkins service to start at boot with the command:

sudo systemctl enable jenkins
You can start the Jenkins service with the command:

sudo systemctl start jenkins
You can check the status of the Jenkins service using the command:

sudo systemctl status jenkins
If everything has been set up correctly, you should see an output like this:

Loaded: loaded (/lib/systemd/system/jenkins.service; enabled; vendor preset: enabled)
Active: active (running) since Tue 2023-06-22 16:19:01 +03; 4min 57s ago
...
If you have a firewall installed, you must add Jenkins as an exception. You must change YOURPORT in the script below to the port you want to use. Port 8080 is the most common.

YOURPORT=8080
PERM="--permanent"
SERV="$PERM --service=jenkins"

firewall-cmd $PERM --new-service=jenkins
firewall-cmd $SERV --set-short="Jenkins ports"
firewall-cmd $SERV --set-description="Jenkins port exceptions"
firewall-cmd $SERV --add-port=$YOURPORT/tcp
firewall-cmd $PERM --add-service=jenkins
firewall-cmd --zone=public --add-service=http --permanent
firewall-cmd --reload
Post-installation setup wizard
After downloading, installing and running Jenkins using one of the procedures above (except for installation with Jenkins Operator), the post-installation setup wizard begins.

This setup wizard takes you through a few quick "one-off" steps to unlock Jenkins, customize it with plugins and create the first administrator user through which you can continue accessing Jenkins.

Unlocking Jenkins
When you first access a new Jenkins instance, you are asked to unlock it using an automatically-generated password.

Browse to http://localhost:8080 (or whichever port you configured for Jenkins when installing it) and wait until the Unlock Jenkins page appears.

Unlock Jenkins page

From the Jenkins console log output, copy the automatically-generated alphanumeric password (between the 2 sets of asterisks).

Copying initial admin password
Note:

The command: sudo cat /var/lib/jenkins/secrets/initialAdminPassword will print the password at console.

If you are running Jenkins in Docker using the official jenkins/jenkins image you can use sudo docker exec ${CONTAINER_ID or CONTAINER_NAME} cat /var/jenkins_home/secrets/initialAdminPassword
to print the password in the console without having to exec into the container.

On the Unlock Jenkins page, paste this password into the Administrator password field and click Continue.
Note:

The Jenkins console log indicates the location (in the Jenkins home directory) where this password can also be obtained. This password must be entered in the setup wizard on new Jenkins installations
before you can access Jenkins’s main UI. This password also serves as the default administrator account’s password (with username "admin") if you happen to skip the subsequent user-creation step in the setup wizard.

Customizing Jenkins with plugins
After unlocking Jenkins, the Customize Jenkins page appears. Here you can install any number of useful plugins as part of your initial setup.

Click one of the two options shown:

Install suggested plugins - to install the recommended set of plugins, which are based on most common use cases.

Select plugins to install - to choose which set of plugins to initially install. When you first access the plugin selection page, the suggested plugins are selected by default.

If you are not sure what plugins you need, choose Install suggested plugins. You can install (or remove) additional Jenkins plugins at a later point in time via the Manage Jenkins > Plugins page in Jenkins.
The setup wizard shows the progression of Jenkins being configured and your chosen set of Jenkins plugins being installed. This process may take a few minutes.

Creating the first administrator user
Finally, after customizing Jenkins with plugins, Jenkins asks you to create your first administrator user.

When the Create First Admin User page appears, specify the details for your administrator user in the respective fields and click Save and Finish.

When the Jenkins is ready page appears, click Start using Jenkins.
Notes:

This page may indicate Jenkins is almost ready! instead and if so, click Restart.

If the page does not automatically refresh after a minute, use your web browser to refresh the page manually.

If required, log in to Jenkins with the credentials of the user you just created and you are ready to start using Jenkins!

